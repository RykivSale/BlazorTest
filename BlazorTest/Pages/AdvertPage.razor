@inject BlazorTest.Data.Repository.IRepository repository;
@page  "/Advert/{index}"


<div class="container">
    <div class="form-group">
        <h3>@carInfo.ModelName</h3>
    </div>
    @*<div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
            <ol class="carousel-indicators">
                .
                <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
                @for (int i = 1; i < carInfo.Images.Count; i++)
                {
                    <li data-target="#carouselExampleIndicators" data-slide-to=@i></li>
                }
            </ol>
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <img class="d-block" width="690" height="240" src="@ImageRender(carInfo.Images[0])" alt="ImageError">
                </div>
                @for (int i = 1; i < carInfo.Images.Count; i++)
                {
                    <div class="carousel-item">
                        <img class="d-block" width="320" height="240" src="@ImageRender(carInfo.Images[i])" alt="ImageError">
                    </div>
                }
            </div>
            <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>*@
    <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">

        <!-- Indicators -->
        <ul class="carousel-indicators">
            <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
            @for (int i = 1; i < carInfo.Images.Count; i++)
            {
                <li data-target="#carouselExampleIndicators" data-slide-to=@i></li>
            }
        </ul>

        <!-- The slideshow -->
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img class="d-block" width="100%" height="400px" src="@ImageRender(carInfo.Images[0])" alt="ImageError">
            </div>
            @for (int i = 1; i < carInfo.Images.Count; i++)
            {
                <div class="carousel-item">
                    <img class="d-block" width="100%" height="400px" src="@ImageRender(carInfo.Images[i])" alt="ImageError">
                </div>
            }
        </div>

        <!-- Left and right controls -->
        <a class="carousel-control-prev" href="#carouselExampleIndicators" data-slide="prev">
            <span class="carousel-control-prev-icon"></span>
        </a>
        <a class="carousel-control-next" href="#carouselExampleIndicators" data-slide="next">
            <span class="carousel-control-next-icon"></span>
        </a>

    </div>
    <div class="form-group">
        <h4>@carInfo.AdvertSurname @carInfo.AdvertName @carInfo.AdvertLastname </h4>
        <h5>@carInfo.AdvertPhone</h5>
    </div>
    <hr>
    <div class="form-group">
        <h3>Тип кузова: @carInfo.CarCase</h3>
    </div>
    <div class="form-group">
        <h3>Цвет: @carInfo.Color</h3>
    </div>
    <div class="form-group">
        <h3>Двигатель: @carInfo.Engine</h3>
    </div>
    <div class="form-group">
        <h3>Налог: @carInfo.Tax руб/мес</h3>
    </div>
    <div class="form-group">
        <h3>Коробка: @carInfo.Gearbox</h3>
    </div>
    <div class="form-group">
        <h3>Комплектация: @carInfo.Equipment</h3>
    </div>
    <div class="form-group">
        <h3> Пробег: @carInfo.Mileage км</h3>
    </div>
    <div class="form-group">
        <h3> Номер: @carInfo.NumberPlate</h3>
    </div>
    <div class="form-group">
        <button class="btn btn-outline-info" @onclick="@(() => { vincodeShow = !vincodeShow; ChangeVincodeBtnName(); })">@vincodeBtnName</button>
        @if (vincodeShow)
        {
            <h3> Vincode: @carInfo.VinCode</h3>
        }
    </div>
    <div class="form-group">
        <h3> Цена: @carInfo.Cost руб.</h3>
    </div>
    <div class="form-group bg-info">
        <h3> Комментарий: </h3><h4>@carInfo.MoreInfo</h4>
    </div>
</div>
@functions {
    [Parameter] public string Index { get; set; }
}
@code {
    private bool vincodeShow = false;
    private string vincodeBtnName ="Показать Vincode";
    private void ChangeVincodeBtnName()
    {
        if (vincodeShow)
        {
            vincodeBtnName = "Скрыть Vincode";
        }
        else vincodeBtnName = "Показать Vincode";
    }
    private string carouseRref() {
        return "/Advert/" + Index + "/#carouselExampleIndicators";
    }
    private string selectedSlide = "1";
    //private int GetCount()
    //{
    //    ++counter;
    //    return counter;
    //}
    public CarInfoPage carInfo { get; set; }

    private void GenerateCarInfo()
    {
        carInfo = repository.GetAllNodes().ToList()[Convert.ToInt32(Index)];
    }
    protected async override Task OnInitializedAsync()
    {
        repository.GetAdvertisements();
        GenerateCarInfo();
    }
    private string ImageRender(byte[] byteImage)
    {
        var base64 = Convert.ToBase64String(byteImage);
        var imgSrc = String.Format("data:image;base64,{0}", base64);
        return imgSrc;
    }
}
